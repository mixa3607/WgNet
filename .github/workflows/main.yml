name: main

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget
    - uses: actions/cache@v2
      with:
        path: ./Submodules/SSH.NET/src/Renci.SshNet/bin/Release/netstandard2.0
        key: ssh.net
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: |
        ./build-ssh.net.sh
        dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --logger trx --results-directory "TestResults"
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v2
      with:
        name: dotnet-results
        path: TestResults
      if: ${{ always() }}
  publish:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_target: [ "LinuxRelease", "WinRelease" ]
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x 
    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget
    - uses: actions/cache@v2
      with:
        path: ./Submodules/SSH.NET/src/Renci.SshNet/bin/Release/netstandard2.0
        key: ssh.net
    - name: Publish
      env:
        BUILD_TARGET: ${{matrix.build_target}}
      run: |
        dotnet publish -c $BUILD_TARGET Wireguard.Cli -o ./out
    - name: Dist
      uses: actions/upload-artifact@v2
      env:
        BUILD_TARGET: ${{matrix.build_target}}
      with:
        name: ${{matrix.build_target}}-prebuild
        path: ./out
